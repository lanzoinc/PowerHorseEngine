"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9157],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>h});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=u(t),h=o,d=p["".concat(c,".").concat(h)]||p[h]||s[h]||a;return t?r.createElement(d,i(i({ref:n},m),{},{components:t})):r.createElement(d,i({ref:n},m))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},10263:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var r=t(87462),o=(t(67294),t(3905));const a={},i="Dark & Light Theme",l={unversionedId:"Tutorials/DarkAndLightTheme",id:"Tutorials/DarkAndLightTheme",title:"Dark & Light Theme",description:"To test, place the following code into a local script on the client.",source:"@site/docs/Tutorials/DarkAndLightTheme.md",sourceDirName:"Tutorials",slug:"/Tutorials/DarkAndLightTheme",permalink:"/PowerHorseEngine/docs/Tutorials/DarkAndLightTheme",draft:!1,editUrl:"https://github.com/lanzoinc/PowerHorseEngine/edit/main/docs/Tutorials/DarkAndLightTheme.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Stateful Button Incrementing",permalink:"/PowerHorseEngine/docs/Tutorials/intro"},next:{title:"Building A Game With Sillito",permalink:"/PowerHorseEngine/docs/Tutorials/SillitoGame"}},c={},u=[],m={toc:u};function s(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dark--light-theme"},"Dark & Light Theme"),(0,o.kt)("p",null,"To test, place the following code into a local script on the client."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'--\x3e Remove :PHeApp if you\'re not using ts\nlocal App:PHeApp = require(game:GetService("ReplicatedStorage"):WaitForChild("PowerHorseEngine"));\nlocal Theme = App:GetGlobal("Theme");\n\nlocal DarkTheme = {\n    Background = Color3.fromRGB(21,21,21);\n    Text = Color3.fromRGB(240,240,240);\n    CustomColor = Color3.fromRGB(95,95,95);\n};\n\nlocal LightTheme = {\n    Background = Color3.fromRGB(240,240,240);\n    Text = Color3.fromRGB(21,21,21);\n    CustomColor = Color3.fromRGB(200,200,200);\n};\n\nlocal function SwitchToTheme(TargetTheme:{[string]:any})\n    if(TargetTheme == LightTheme)then\n        CurrentTheme = "light";\n    else\n        CurrentTheme = "dark";\n    end\n    Theme.extendTheme(TargetTheme)\nend;\n\nSwitchToTheme(LightTheme) --\x3e Extend theme on init so our "CustomColor" will be applied\n\nlocal GUI = Instance.new("ScreenGui");\nGUI.Name = "PHe-ThemeDemo";\nGUI.ResetOnSpawn = false;\nGUI.IgnoreGuiInset = true;\nlocal Player = game.Players.LocalPlayer;\n\nlocal Background = App.new("Frame");\nBackground.Size = UDim2.fromScale(1,1);\n--\x3e Apply theme to components\nBackground.BackgroundColor3 = Theme.useTheme("Background");\n\n\nlocal Button = App.new("Button");\nButton.ButtonFlexSizing = true;\nButton.AnchorPoint = Vector2.new(.5,.5);\nButton.Position = UDim2.fromScale(.5,.5);\nButton.Text = "Click To Switch Theme";\n--\x3e Apply theme to components\nButton.BackgroundColor3 = Theme.useTheme("CustomColor");\nButton.TextColor3 = Theme.useTheme("Text");\n\nButton.Parent =  Background;\nBackground.Parent = GUI;\n\n\nButton.MouseButton1Down:Connect(function()\n    if(CurrentTheme == "light")then\n        SwitchToTheme(DarkTheme);\n    else\n        SwitchToTheme(LightTheme);\n    end\nend)\n\nGUI.Parent = Player:WaitForChild("PlayerGui")\n')))}s.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8038],{72703:e=>{e.exports=JSON.parse('{"functions":[{"name":"Task","desc":"Gives a function task to the servant that will be removed once the task was completed.\\nIf `Servant` is destroyed while trying to complete task, the task will end as well.\\n\\n```lua\\n    local function loopFunction()\\n        for i = 1,1000, do\\n            print(\\"Task is still running!\\");\\n            task.wait();\\n        end;\\n    end;\\n    Servant:Task(loopFunction); --\x3e Will print \\"Task is still running\\" multiple times\\n    print(\\"Lanzo,inc. Demonstration\\"); --\x3e This will print even though a loop is running\\n    task.wait(5); \\n    Servant:Destroy(); --\x3e Will no longer print \\"Task is still running\\"\\n```","params":[{"name":"cb","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":34,"path":"src/Pseudo/Core/Classes/Servants/Servant.lua"}},{"name":"Instance","desc":"Calls Instance.new(...) and calls Servant:Keep() on the instance ","params":[{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"Instance\\n"}],"function_type":"method","source":{"line":51,"path":"src/Pseudo/Core/Classes/Servants/Servant.lua"}},{"name":"Pseudo","desc":"Calls Pseudo.new(...) and calls Servant:Keep() on the pseudo ","params":[{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":58,"path":"src/Pseudo/Core/Classes/Servants/Servant.lua"}},{"name":"Keep","desc":"Tells the Servant that it should keep the Instance or Pseudo\\nWhenever the Servant is destroyed, the instance/pseudo will be destroyed aswell","params":[{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":66,"path":"src/Pseudo/Core/Classes/Servants/Servant.lua"}},{"name":"Free","desc":"Tells the servant to no longer track the Instance or Pseudo","params":[{"name":"instance","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":102,"path":"src/Pseudo/Core/Classes/Servants/Servant.lua"}},{"name":"Connect","desc":"Tracks the connection","params":[{"name":"connection","desc":"","lua_type":"RBXScriptSignal"},{"name":"handler","desc":"","lua_type":"any"},{"name":"id","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"RBXScriptConnection\\n"}],"function_type":"method","source":{"line":115,"path":"src/Pseudo/Core/Classes/Servants/Servant.lua"}},{"name":"Disconnect","desc":"Removes tracking from the connection","params":[{"name":"connection","desc":"","lua_type":"RBXScriptConnection"}],"returns":[],"function_type":"method","source":{"line":128,"path":"src/Pseudo/Core/Classes/Servants/Servant.lua"}},{"name":"Destroy","desc":"Destroys the Servant, which will intern destroy all tracked instance and disconnect all tracked connections","params":[],"returns":[],"function_type":"method","source":{"line":141,"path":"src/Pseudo/Core/Classes/Servants/Servant.lua"}}],"properties":[],"types":[],"name":"Servant","desc":"Servants are PowerHorseEngine\'s way of classes like `Maid`.","source":{"line":10,"path":"src/Pseudo/Core/Classes/Servants/Servant.lua"}}')}}]);
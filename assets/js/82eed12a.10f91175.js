"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7591],{73178:e=>{e.exports=JSON.parse('{"functions":[{"name":"useEffect","desc":"```lua\\n--\x3e useEffect with a state depedency\\nuseEffect(function()\\n\\tprint(\\"This is only called when the state is changed\\")\\nend,{AwesomeState});\\n\\n--\x3e useEffect with property depedency\\nuseEffect(function()\\n\\tprint(\\"This is only called when \\\\\\"OtherProperty\\\\\\" and \\\\\\"TextColor3\\\\\\" are changed\\")\\nend,{\\"OtherProperty\\",\\"TextColor3\\"})\\n\\nuseEffect(function()\\n\\tlocal doCleanupOnPreviousLoop = false;\\n\\tfor i = 1,AwesomeState,1 do\\n\\t\\tif(doCleanupOnPreviousLoop)then break;end;\\n\\t\\tprint(\\"Running at index : \\",i);\\n\\t\\twait(1);\\n\\tend;\\n\\treturn function ()\\n\\t\\t--//This will cause the previous for loop if still running to end whenever this useEffect hook is called\\n\\t\\tdoCleanupOnPreviousLoop = true; \\n\\tend;\\n\\t\\nend,{AwesomeState})\\n\\n\\nreturn function ()\\n\\tprint(\\"This is called whenever any property of the component is changed\\");\\nend;\\n```\\n\\t\\t\\t\\t","params":[{"name":"callback","desc":"A function that is called whenever the useEffect is triggered","lua_type":"function"},{"name":"dependencies","desc":"An optional list of items that can trigger this useEffect","lua_type":"table?"}],"returns":[{"desc":"","lua_type":"Servant"}],"function_type":"static","source":{"line":683,"path":"src/Pseudo/Core/Util.lua"}}],"properties":[],"types":[],"name":"useEffect","desc":"useEffect is a hook that is use by functional [Pseudo]\'s.\\n\\t\\t\\t\\t","source":{"line":644,"path":"src/Pseudo/Core/Util.lua"}}')}}]);
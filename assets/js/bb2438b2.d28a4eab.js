"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1417],{47169:e=>{e.exports=JSON.parse('{"functions":[{"name":"CreateDedicatedScreenGui","desc":"","params":[{"name":"ScreenGuiProps","desc":"","lua_type":"{[string]:any}?"}],"returns":[],"function_type":"method","realm":["Client"],"source":{"line":34,"path":"src/Core/Libraries/Sillito/SillitoBranch.lua"}},{"name":"PortModulars","desc":"","params":[{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","realm":["Client"],"source":{"line":58,"path":"src/Core/Libraries/Sillito/SillitoBranch.lua"}},{"name":"PortComponentClass","desc":"","params":[{"name":"Component","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":70,"path":"src/Core/Libraries/Sillito/SillitoBranch.lua"}},{"name":"PortComponentClasses","desc":"","params":[{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":77,"path":"src/Core/Libraries/Sillito/SillitoBranch.lua"}},{"name":"GetComponentClass","desc":"","params":[{"name":"ClassName","desc":"","lua_type":"string"}],"returns":[],"function_type":"method","source":{"line":107,"path":"src/Core/Libraries/Sillito/SillitoBranch.lua"}},{"name":"PortModular","desc":"","params":[{"name":"Modular","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","realm":["Client"],"source":{"line":117,"path":"src/Core/Libraries/Sillito/SillitoBranch.lua"}},{"name":"Start","desc":"","params":[],"returns":[],"function_type":"method","source":{"line":234,"path":"src/Core/Libraries/Sillito/SillitoBranch.lua"}},{"name":"PortServices","desc":"","params":[{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":310,"path":"src/Core/Libraries/Sillito/SillitoBranch.lua"}},{"name":"PortService","desc":"","params":[{"name":"Service","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":325,"path":"src/Core/Libraries/Sillito/SillitoBranch.lua"}},{"name":"GetBranch","desc":"    ","params":[{"name":"Branch","desc":"","lua_type":"string"}],"returns":[],"function_type":"method","source":{"line":395,"path":"src/Core/Libraries/Sillito/SillitoBranch.lua"}},{"name":"HasBranch","desc":"    ","params":[{"name":"Branch","desc":"","lua_type":"string"}],"returns":[],"function_type":"method","source":{"line":401,"path":"src/Core/Libraries/Sillito/SillitoBranch.lua"}},{"name":"GetComponentClass","desc":"    ","params":[{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":408,"path":"src/Core/Libraries/Sillito/SillitoBranch.lua"}},{"name":"UseChannel","desc":":::warning\\nIn Order for this to work the service must have a `Shared` property.\\n:::\\n\\nIdealy, you would want to call this method during the services Init lifecycle. You will then be able to access\\nthis Channel on the client by using `Service:UseChannel(ChannelName)`\\n\\nChannels are just [RemoteEvent]\'s.\\n    ","params":[{"name":"ChannelName","desc":"","lua_type":"string"},{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"RemoteEvent\\n"}],"function_type":"method","source":{"line":423,"path":"src/Core/Libraries/Sillito/SillitoBranch.lua"}},{"name":"GetModular","desc":"","params":[{"name":"ModularName","desc":"","lua_type":"string"}],"returns":[],"function_type":"method","realm":["Client"],"source":{"line":505,"path":"src/Core/Libraries/Sillito/SillitoBranch.lua"}},{"name":"GetService","desc":"","params":[{"name":"ServiceName","desc":"","lua_type":"string"}],"returns":[],"function_type":"method","source":{"line":513,"path":"src/Core/Libraries/Sillito/SillitoBranch.lua"}}],"properties":[{"name":"setDynamicProps","desc":"            ","lua_type":"(Player) -> {[string]:any}","source":{"line":367,"path":"src/Core/Libraries/Sillito/SillitoBranch.lua"}}],"types":[],"name":"SillitoBranch","desc":"","source":{"line":8,"path":"src/Core/Libraries/Sillito/SillitoBranch.lua"}}')}}]);
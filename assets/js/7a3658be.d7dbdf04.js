"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5418],{39947:e=>{e.exports=JSON.parse('{"functions":[{"name":"GetBranch","desc":"","params":[{"name":"BranchName","desc":"","lua_type":"string"},{"name":"tries","desc":"","lua_type":"number?"}],"returns":[{"desc":"","lua_type":"Types.SillitoBranch?\\r\\n"}],"function_type":"method","source":{"line":37,"path":"src/Core/Libraries/Sillito/init.lua"}},{"name":"HasBranch","desc":"","params":[{"name":"BranchName","desc":"","lua_type":"string"}],"returns":[],"function_type":"method","source":{"line":54,"path":"src/Core/Libraries/Sillito/init.lua"}},{"name":"CreateBranch","desc":"A branch is a wrapper for services and modulars. By default you use the \'main\' branch which should be enough.\\nBut in some cases, a thirdparty may need to use this library, and to prevent naming errors mismatch, we added branches","params":[{"name":"BranchName","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Types.SillitoBranch\\r\\n"}],"function_type":"method","source":{"line":62,"path":"src/Core/Libraries/Sillito/init.lua"}}],"properties":[],"types":[],"name":"Sillito","desc":"","source":{"line":32,"path":"src/Core/Libraries/Sillito/init.lua"}}')}}]);